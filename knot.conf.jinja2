{% set acls = [] %}
{% set remotes = [] %}

{% if TSIG_SLAVES %}
{% for slave_data in TSIG_SLAVES.split(' ') %}
{% set id, ip_addr, key = slave_data.split(':') %}
{% if "/" not in ip_addr %}
    {% set remotes = remotes + [ip_addr] %}
    {% if remotes.append(ip_addr) %}{% endif %}
{% endif %}
{% if acls.append("acl_"+id) %}{% endif %}
{% endfor %}
{% endif %}
{% if TSIG_UPDATES %}
{% for update_data in TSIG_UPDATES.split(' ') %}
{% set id, ip_addr, key = update_data.split(':') %}
{% if acls.append("acl_"+id) %}{% endif %}
{% endfor %}
{% endif %}

{% if DNSTAP_SOCKET %}
mod-dnstap:
  - id: capture_all
    sink: unix:{{ DNSTAP_SOCKET }}
{% endif %}
policy:
  - id: rsa
    algorithm: RSASHA256
    ksk-size: 2048
    zsk-size: 1024
server:
    listen: 0.0.0.0@53
    listen: ::@53
    user: knot:knot
    rate-limit: 15
    rate-limit-slip: 1
log:
  - target: stdout
    any: notice
    zone: info
    server: info
template:
  - id: default
{% if DNSTAP_SOCKET %}
    global-module: mod-dnstap/capture_all
{% endif %}
    storage: "/var/lib/knot"
    serial-policy: {{ SERIAL_POLICY | default("increment")}}
    kasp-db: "kasp"
    disable-any: on
{% if TSIG_KEYS %}
key:
{% for key_data in TSIG_KEYS.split(' ') %}
{% set id, alg, secret =  key_data.split(':') %}
  - id: key_{{ id }}
    algorithm: {{ alg }}
    secret: {{ secret }}
{% endfor %}
{% endif %}
{% if TSIG_SLAVES %}
remote:
{% for slave_data in TSIG_SLAVES.split(' ') %}
{% set id, remote, key_id = slave_data.split(':')  %}
{% if "/" not in remote %}
  - id: slave_{{ id }}
    address: {{ remote }}@53
{% endif %}
{% endfor %}
{% endif %}
{% if TSIG_UPDATES or TSIG_SLAVES %}
acl:
{% if TSIG_UPDATES %}
{% for updatekey_data in TSIG_UPDATES.split(' ') %}
{% set id, remote, key_id = updatekey_data.split(':') %}
  - id: acl_{{ id }}
    address: {{ remote }}
    key: key_{{ key_id }}
    action: update
{% endfor -%}
{% endif %}
{% if TSIG_SLAVES %}
{% for slave_data in TSIG_SLAVES.split(' ') %}
{% set id, remote, key_id = slave_data.split(':') %}
  - id: acl_{{ id }}
    address: {{ remote }}
    key: key_{{ key_id }}
    action: transfer
{% endfor %}
{% endif %}
{% endif %}
zone:
{% for zone in ZONES_DNSSEC.split(' ') %}
  - domain: {{ zone }}
    dnssec-signing: on
    dnssec-policy: rsa
    file: /var/lib/knot/zones/{{ zone }}
{% if acls | length  %}
    acl: [ {{ acls | join (',') }}]
{% endif %}
{% if remotes | length  %}
    notify: [ {{ remotes | join(',') }}]
{% endif %}
{% endfor %}
